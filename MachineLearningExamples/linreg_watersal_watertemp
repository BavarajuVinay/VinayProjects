#!/usr/bin/env python
# coding: utf-8

# In[54]:


# 1. Is there a relationship between water salinity & water temperature? 
# Can you predict the water temperature based on salinity?

import pandas as pd 
data = pd.read_csv(r"C:\Users\B V N DURGA VINAY\Downloads\bottle.csv")
data.drop(data.iloc[:,0:5],inplace=True,axis=1)
data.drop(data.iloc[:,2:70],inplace=True,axis=1)
mean_tdegc = data['T_degC'].mean()
mean_salnty = data['Salnty'].mean()
data['T_degC'].fillna(value=mean_tdegc,inplace=True)
data['Salnty'].fillna(value=mean_salnty,inplace=True)


# In[55]:


print(data.isnull())


# In[66]:


# Assigning the data to the X and y
X = data[['Salnty']]
y = data['T_degC']

print("\nX shape\n")
print(X.shape)
print("\ny shape\n")
print(y.shape)
from sklearn.model_selection import train_test_split
# split the data into training and testing sets
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2)
print("\nX_train shape\n")
print(X_train.shape)
print("\nX_test shape\n")
print(X_test.shape)


# In[72]:


from sklearn.linear_model import LinearRegression
model = LinearRegression()
model.fit(X_train,y_train)
y_pred = model.predict(X_test)
print(y_pred)


# In[74]:


from sklearn.metrics import mean_absolute_error,r2_score
r2 = r2_score(y_test,y_pred)
print("r2_score is ",r2)
mae = mean_absolute_error(y_test,y_pred)
print("\nmean_absolute_error is ",mae)


# In[80]:


import matplotlib.pyplot as plt

# plot the training data
plt.scatter(X_train, y_train, color='blue')
plt.title('Training Data')
plt.xlabel('X')
plt.ylabel('y')
plt.show()

# plot the testing data and predicted values
plt.scatter(X_test, y_test, color='red')
plt.scatter(X_test, y_pred, color='black')
plt.title('Testing Data with Predicted Values')
plt.xlabel('X')
plt.ylabel('y')
plt.show()


# In[ ]:




